import { Lifecycle, container } from "tsyringe";
import { Client as NotionClient } from '@notionhq/client';
import ProjectRepository from "@/repositories/ProjectRepository";
import CacheService from "@/services/CacheService";
import ProjectService from "@/services/ProjectService";
import StorageService from "@/services/StorageService";
import ProjectRepositoryInterface from "@/repositories/ProjectRepositoryInterface";
import CacheServiceInterface from "@/services/CacheServiceInterface";
import StorageServiceInterface from "@/services/StorageServiceInterface";
import ProjectServiceInterface from "@/services/ProjectServiceInterface";
import ExperienceRepositoryInterface from "@/repositories/ExperienceRepositoryInterface";
import ExperienceRepository from "@/repositories/ExperienceRepository";
import ExperienceServiceInterface from "@/services/ExperienceServiceInterface";
import ExperienceService from "@/services/ExperienceService";
import CertRepository from "@/repositories/CertRepository";
import CertRepositoryInterface from "@/repositories/CertRepositoryInterface";
import CertServiceInterface from "@/services/CertServiceInterface";
import CertService from "@/services/CertService";
import ProfileRepositoryInterface from "@/repositories/ProfileRepositoryInterface";
import ProfileRepository from "@/repositories/ProfileRepository";
import ProfileServiceInterface from "@/services/ProfileServiceInterface";
import ProfileService from "@/services/ProfileService";
import EducationRepository from "@/repositories/EducationRepository";
import EducationRepositoryInterface from "@/repositories/EducationRepositoryInterface";
import EducationService from "@/services/EducationService";
import EducationServiceInterface from "@/services/EducationServiceInterface";
import EventBusServiceInterface from "@/services/EventBusServiceInterface";
import EventBusService from "@/services/EventBusService";

container.register<ProjectRepositoryInterface>('ProjectRepositoryInterface', ProjectRepository, { lifecycle: Lifecycle.Singleton });
container.register<ExperienceRepositoryInterface>('ExperienceRepositoryInterface', ExperienceRepository, { lifecycle: Lifecycle.Singleton });
container.register<CertRepositoryInterface>('CertRepositoryInterface', CertRepository, { lifecycle: Lifecycle.Singleton });
container.register<EducationRepositoryInterface>('EducationRepositoryInterface', EducationRepository, { lifecycle: Lifecycle.Singleton });
container.register<ProfileRepositoryInterface>('ProfileRepositoryInterface', ProfileRepository, { lifecycle: Lifecycle.Singleton });

container.register<CacheServiceInterface>('CacheServiceInterface', CacheService, { lifecycle: Lifecycle.Singleton });
container.register<StorageServiceInterface>('StorageServiceInterface', StorageService, { lifecycle: Lifecycle.Singleton });
container.register<ProjectServiceInterface>('ProjectServiceInterface', ProjectService, { lifecycle: Lifecycle.Singleton });
container.register<ExperienceServiceInterface>('ExperienceServiceInterface', ExperienceService, { lifecycle: Lifecycle.Singleton });
container.register<CertServiceInterface>('CertServiceInterface', CertService, { lifecycle: Lifecycle.Singleton });
container.register<EducationServiceInterface>('EducationServiceInterface', EducationService, { lifecycle: Lifecycle.Singleton });
container.register<ProfileServiceInterface>('ProfileServiceInterface', ProfileService, { lifecycle: Lifecycle.Singleton });
container.register<EventBusServiceInterface>('EventBusServiceInterface', EventBusService, { lifecycle: Lifecycle.Singleton });

container.registerInstance<NotionClient>('NotionClient', new NotionClient({ auth: process.env.NOTION_API_KEY }));
